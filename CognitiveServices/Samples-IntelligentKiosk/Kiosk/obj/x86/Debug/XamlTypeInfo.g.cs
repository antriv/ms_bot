//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace IntelligentKioskSample
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
    private global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlTypeInfoProvider _provider;

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[75];
            _typeNameTable[0] = "IntelligentKioskSample.Controls.OverallStatsControl";
            _typeNameTable[1] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[2] = "String";
            _typeNameTable[3] = "Windows.UI.Xaml.Visibility";
            _typeNameTable[4] = "IntelligentKioskSample.Controls.CameraControl";
            _typeNameTable[5] = "Boolean";
            _typeNameTable[6] = "Double";
            _typeNameTable[7] = "Int32";
            _typeNameTable[8] = "Windows.Media.Devices.CameraStreamState";
            _typeNameTable[9] = "System.Enum";
            _typeNameTable[10] = "System.ValueType";
            _typeNameTable[11] = "Object";
            _typeNameTable[12] = "IntelligentKioskSample.Controls.SentimentControl";
            _typeNameTable[13] = "IntelligentKioskSample.Views.SentimentToColorConverter";
            _typeNameTable[14] = "IntelligentKioskSample.Controls.VerticalBarWithValueControl";
            _typeNameTable[15] = "Windows.UI.Xaml.Media.SolidColorBrush";
            _typeNameTable[16] = "System.Nullable`1<Int32>";
            _typeNameTable[17] = "IntelligentKioskSample.Controls.SentimentDistributionControl";
            _typeNameTable[18] = "IntelligentKioskSample.Controls.SpeechToTextControl";
            _typeNameTable[19] = "IntelligentKioskSample.Controls.EmotionResponseTimelineControl";
            _typeNameTable[20] = "IntelligentKioskSample.Controls.EmotionResponseStackBarControl";
            _typeNameTable[21] = "IntelligentKioskSample.Controls.AgeGenderDistributionControl";
            _typeNameTable[22] = "IntelligentKioskSample.Controls.EmotionEmojiControl";
            _typeNameTable[23] = "IntelligentKioskSample.Controls.RealTimeFaceIdentificationBorder";
            _typeNameTable[24] = "IntelligentKioskSample.Controls.EmotionMeterControl";
            _typeNameTable[25] = "Single";
            _typeNameTable[26] = "IntelligentKioskSample.Controls.FaceIdentificationBorder";
            _typeNameTable[27] = "ServiceHelpers.EmotionData[]";
            _typeNameTable[28] = "System.Array";
            _typeNameTable[29] = "ServiceHelpers.EmotionData";
            _typeNameTable[30] = "IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl";
            _typeNameTable[31] = "IntelligentKioskSample.Controls.PageHeader";
            _typeNameTable[32] = "Windows.UI.Xaml.UIElement";
            _typeNameTable[33] = "IntelligentKioskSample.Views.WordCountToFontSizeConverter";
            _typeNameTable[34] = "IntelligentKioskSample.Views.BingNewsAnalyticsPage";
            _typeNameTable[35] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[36] = "System.Collections.ObjectModel.ObservableCollection`1<IntelligentKioskSample.Views.NewsAndSentimentScore>";
            _typeNameTable[37] = "System.Collections.ObjectModel.Collection`1<IntelligentKioskSample.Views.NewsAndSentimentScore>";
            _typeNameTable[38] = "IntelligentKioskSample.Views.NewsAndSentimentScore";
            _typeNameTable[39] = "ServiceHelpers.NewsArticle";
            _typeNameTable[40] = "System.Collections.Generic.IEnumerable`1<String>";
            _typeNameTable[41] = "System.Collections.ObjectModel.ObservableCollection`1<IntelligentKioskSample.Views.KeyPhraseCount>";
            _typeNameTable[42] = "System.Collections.ObjectModel.Collection`1<IntelligentKioskSample.Views.KeyPhraseCount>";
            _typeNameTable[43] = "IntelligentKioskSample.Views.KeyPhraseCount";
            _typeNameTable[44] = "IntelligentKioskSample.Views.DemoLauncherPage";
            _typeNameTable[45] = "IntelligentKioskSample.Views.MallKioskPage";
            _typeNameTable[46] = "System.Collections.ObjectModel.ObservableCollection`1<IntelligentKioskSample.Views.EmotionExpressionCapture>";
            _typeNameTable[47] = "System.Collections.ObjectModel.Collection`1<IntelligentKioskSample.Views.EmotionExpressionCapture>";
            _typeNameTable[48] = "IntelligentKioskSample.Views.EmotionExpressionCapture";
            _typeNameTable[49] = "Windows.UI.Xaml.Media.ImageSource";
            _typeNameTable[50] = "IntelligentKioskSample.Views.RealTimeDemo";
            _typeNameTable[51] = "IntelligentKioskSample.Views.AutomaticPhotoCapturePage";
            _typeNameTable[52] = "IntelligentKioskSample.Controls.ImageSearchUserControl";
            _typeNameTable[53] = "IntelligentKioskSample.Views.PersonDetailsPage";
            _typeNameTable[54] = "Microsoft.ProjectOxford.Face.Contract.Person";
            _typeNameTable[55] = "Microsoft.ProjectOxford.Face.Contract.PersonGroup";
            _typeNameTable[56] = "System.Collections.ObjectModel.ObservableCollection`1<Microsoft.ProjectOxford.Face.Contract.PersonFace>";
            _typeNameTable[57] = "System.Collections.ObjectModel.Collection`1<Microsoft.ProjectOxford.Face.Contract.PersonFace>";
            _typeNameTable[58] = "Microsoft.ProjectOxford.Face.Contract.PersonFace";
            _typeNameTable[59] = "Guid";
            _typeNameTable[60] = "IntelligentKioskSample.Views.EmotionRecognitionPage";
            _typeNameTable[61] = "IntelligentKioskSample.Views.RecognitionPage";
            _typeNameTable[62] = "IntelligentKioskSample.Views.SettingsPage";
            _typeNameTable[63] = "IntelligentKioskSample.Controls.NavMenuListView";
            _typeNameTable[64] = "Windows.UI.Xaml.Controls.ListView";
            _typeNameTable[65] = "Windows.UI.Xaml.Controls.ItemsControl";
            _typeNameTable[66] = "IntelligentKioskSample.AppShell";
            _typeNameTable[67] = "Windows.UI.Xaml.Controls.Frame";
            _typeNameTable[68] = "Windows.Foundation.Rect";
            _typeNameTable[69] = "IntelligentKioskSample.Views.PersonGroupDetailsPage";
            _typeNameTable[70] = "System.Collections.ObjectModel.ObservableCollection`1<Microsoft.ProjectOxford.Face.Contract.Person>";
            _typeNameTable[71] = "System.Collections.ObjectModel.Collection`1<Microsoft.ProjectOxford.Face.Contract.Person>";
            _typeNameTable[72] = "Guid[]";
            _typeNameTable[73] = "IntelligentKioskSample.Views.PersonGroupsPage";
            _typeNameTable[74] = "IntelligentKioskSample.Views.LandingPage";

            _typeTable = new global::System.Type[75];
            _typeTable[0] = typeof(global::IntelligentKioskSample.Controls.OverallStatsControl);
            _typeTable[1] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[2] = typeof(global::System.String);
            _typeTable[3] = typeof(global::Windows.UI.Xaml.Visibility);
            _typeTable[4] = typeof(global::IntelligentKioskSample.Controls.CameraControl);
            _typeTable[5] = typeof(global::System.Boolean);
            _typeTable[6] = typeof(global::System.Double);
            _typeTable[7] = typeof(global::System.Int32);
            _typeTable[8] = typeof(global::Windows.Media.Devices.CameraStreamState);
            _typeTable[9] = typeof(global::System.Enum);
            _typeTable[10] = typeof(global::System.ValueType);
            _typeTable[11] = typeof(global::System.Object);
            _typeTable[12] = typeof(global::IntelligentKioskSample.Controls.SentimentControl);
            _typeTable[13] = typeof(global::IntelligentKioskSample.Views.SentimentToColorConverter);
            _typeTable[14] = typeof(global::IntelligentKioskSample.Controls.VerticalBarWithValueControl);
            _typeTable[15] = typeof(global::Windows.UI.Xaml.Media.SolidColorBrush);
            _typeTable[16] = typeof(global::System.Nullable<global::System.Int32>);
            _typeTable[17] = typeof(global::IntelligentKioskSample.Controls.SentimentDistributionControl);
            _typeTable[18] = typeof(global::IntelligentKioskSample.Controls.SpeechToTextControl);
            _typeTable[19] = typeof(global::IntelligentKioskSample.Controls.EmotionResponseTimelineControl);
            _typeTable[20] = typeof(global::IntelligentKioskSample.Controls.EmotionResponseStackBarControl);
            _typeTable[21] = typeof(global::IntelligentKioskSample.Controls.AgeGenderDistributionControl);
            _typeTable[22] = typeof(global::IntelligentKioskSample.Controls.EmotionEmojiControl);
            _typeTable[23] = typeof(global::IntelligentKioskSample.Controls.RealTimeFaceIdentificationBorder);
            _typeTable[24] = typeof(global::IntelligentKioskSample.Controls.EmotionMeterControl);
            _typeTable[25] = typeof(global::System.Single);
            _typeTable[26] = typeof(global::IntelligentKioskSample.Controls.FaceIdentificationBorder);
            _typeTable[27] = typeof(global::ServiceHelpers.EmotionData[]);
            _typeTable[28] = typeof(global::System.Array);
            _typeTable[29] = typeof(global::ServiceHelpers.EmotionData);
            _typeTable[30] = typeof(global::IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl);
            _typeTable[31] = typeof(global::IntelligentKioskSample.Controls.PageHeader);
            _typeTable[32] = typeof(global::Windows.UI.Xaml.UIElement);
            _typeTable[33] = typeof(global::IntelligentKioskSample.Views.WordCountToFontSizeConverter);
            _typeTable[34] = typeof(global::IntelligentKioskSample.Views.BingNewsAnalyticsPage);
            _typeTable[35] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[36] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::IntelligentKioskSample.Views.NewsAndSentimentScore>);
            _typeTable[37] = typeof(global::System.Collections.ObjectModel.Collection<global::IntelligentKioskSample.Views.NewsAndSentimentScore>);
            _typeTable[38] = typeof(global::IntelligentKioskSample.Views.NewsAndSentimentScore);
            _typeTable[39] = typeof(global::ServiceHelpers.NewsArticle);
            _typeTable[40] = typeof(global::System.Collections.Generic.IEnumerable<global::System.String>);
            _typeTable[41] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::IntelligentKioskSample.Views.KeyPhraseCount>);
            _typeTable[42] = typeof(global::System.Collections.ObjectModel.Collection<global::IntelligentKioskSample.Views.KeyPhraseCount>);
            _typeTable[43] = typeof(global::IntelligentKioskSample.Views.KeyPhraseCount);
            _typeTable[44] = typeof(global::IntelligentKioskSample.Views.DemoLauncherPage);
            _typeTable[45] = typeof(global::IntelligentKioskSample.Views.MallKioskPage);
            _typeTable[46] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::IntelligentKioskSample.Views.EmotionExpressionCapture>);
            _typeTable[47] = typeof(global::System.Collections.ObjectModel.Collection<global::IntelligentKioskSample.Views.EmotionExpressionCapture>);
            _typeTable[48] = typeof(global::IntelligentKioskSample.Views.EmotionExpressionCapture);
            _typeTable[49] = typeof(global::Windows.UI.Xaml.Media.ImageSource);
            _typeTable[50] = typeof(global::IntelligentKioskSample.Views.RealTimeDemo);
            _typeTable[51] = typeof(global::IntelligentKioskSample.Views.AutomaticPhotoCapturePage);
            _typeTable[52] = typeof(global::IntelligentKioskSample.Controls.ImageSearchUserControl);
            _typeTable[53] = typeof(global::IntelligentKioskSample.Views.PersonDetailsPage);
            _typeTable[54] = typeof(global::Microsoft.ProjectOxford.Face.Contract.Person);
            _typeTable[55] = typeof(global::Microsoft.ProjectOxford.Face.Contract.PersonGroup);
            _typeTable[56] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Microsoft.ProjectOxford.Face.Contract.PersonFace>);
            _typeTable[57] = typeof(global::System.Collections.ObjectModel.Collection<global::Microsoft.ProjectOxford.Face.Contract.PersonFace>);
            _typeTable[58] = typeof(global::Microsoft.ProjectOxford.Face.Contract.PersonFace);
            _typeTable[59] = typeof(global::System.Guid);
            _typeTable[60] = typeof(global::IntelligentKioskSample.Views.EmotionRecognitionPage);
            _typeTable[61] = typeof(global::IntelligentKioskSample.Views.RecognitionPage);
            _typeTable[62] = typeof(global::IntelligentKioskSample.Views.SettingsPage);
            _typeTable[63] = typeof(global::IntelligentKioskSample.Controls.NavMenuListView);
            _typeTable[64] = typeof(global::Windows.UI.Xaml.Controls.ListView);
            _typeTable[65] = typeof(global::Windows.UI.Xaml.Controls.ItemsControl);
            _typeTable[66] = typeof(global::IntelligentKioskSample.AppShell);
            _typeTable[67] = typeof(global::Windows.UI.Xaml.Controls.Frame);
            _typeTable[68] = typeof(global::Windows.Foundation.Rect);
            _typeTable[69] = typeof(global::IntelligentKioskSample.Views.PersonGroupDetailsPage);
            _typeTable[70] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Microsoft.ProjectOxford.Face.Contract.Person>);
            _typeTable[71] = typeof(global::System.Collections.ObjectModel.Collection<global::Microsoft.ProjectOxford.Face.Contract.Person>);
            _typeTable[72] = typeof(global::System.Guid[]);
            _typeTable[73] = typeof(global::IntelligentKioskSample.Views.PersonGroupsPage);
            _typeTable[74] = typeof(global::IntelligentKioskSample.Views.LandingPage);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_OverallStatsControl() { return new global::IntelligentKioskSample.Controls.OverallStatsControl(); }
        private object Activate_4_CameraControl() { return new global::IntelligentKioskSample.Controls.CameraControl(); }
        private object Activate_12_SentimentControl() { return new global::IntelligentKioskSample.Controls.SentimentControl(); }
        private object Activate_13_SentimentToColorConverter() { return new global::IntelligentKioskSample.Views.SentimentToColorConverter(); }
        private object Activate_14_VerticalBarWithValueControl() { return new global::IntelligentKioskSample.Controls.VerticalBarWithValueControl(); }
        private object Activate_17_SentimentDistributionControl() { return new global::IntelligentKioskSample.Controls.SentimentDistributionControl(); }
        private object Activate_18_SpeechToTextControl() { return new global::IntelligentKioskSample.Controls.SpeechToTextControl(); }
        private object Activate_19_EmotionResponseTimelineControl() { return new global::IntelligentKioskSample.Controls.EmotionResponseTimelineControl(); }
        private object Activate_20_EmotionResponseStackBarControl() { return new global::IntelligentKioskSample.Controls.EmotionResponseStackBarControl(); }
        private object Activate_21_AgeGenderDistributionControl() { return new global::IntelligentKioskSample.Controls.AgeGenderDistributionControl(); }
        private object Activate_22_EmotionEmojiControl() { return new global::IntelligentKioskSample.Controls.EmotionEmojiControl(); }
        private object Activate_23_RealTimeFaceIdentificationBorder() { return new global::IntelligentKioskSample.Controls.RealTimeFaceIdentificationBorder(); }
        private object Activate_24_EmotionMeterControl() { return new global::IntelligentKioskSample.Controls.EmotionMeterControl(); }
        private object Activate_26_FaceIdentificationBorder() { return new global::IntelligentKioskSample.Controls.FaceIdentificationBorder(); }
        private object Activate_29_EmotionData() { return new global::ServiceHelpers.EmotionData(); }
        private object Activate_30_ImageWithFaceBorderUserControl() { return new global::IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl(); }
        private object Activate_31_PageHeader() { return new global::IntelligentKioskSample.Controls.PageHeader(); }
        private object Activate_33_WordCountToFontSizeConverter() { return new global::IntelligentKioskSample.Views.WordCountToFontSizeConverter(); }
        private object Activate_34_BingNewsAnalyticsPage() { return new global::IntelligentKioskSample.Views.BingNewsAnalyticsPage(); }
        private object Activate_36_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::IntelligentKioskSample.Views.NewsAndSentimentScore>(); }
        private object Activate_37_Collection() { return new global::System.Collections.ObjectModel.Collection<global::IntelligentKioskSample.Views.NewsAndSentimentScore>(); }
        private object Activate_38_NewsAndSentimentScore() { return new global::IntelligentKioskSample.Views.NewsAndSentimentScore(); }
        private object Activate_39_NewsArticle() { return new global::ServiceHelpers.NewsArticle(); }
        private object Activate_41_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::IntelligentKioskSample.Views.KeyPhraseCount>(); }
        private object Activate_42_Collection() { return new global::System.Collections.ObjectModel.Collection<global::IntelligentKioskSample.Views.KeyPhraseCount>(); }
        private object Activate_43_KeyPhraseCount() { return new global::IntelligentKioskSample.Views.KeyPhraseCount(); }
        private object Activate_44_DemoLauncherPage() { return new global::IntelligentKioskSample.Views.DemoLauncherPage(); }
        private object Activate_45_MallKioskPage() { return new global::IntelligentKioskSample.Views.MallKioskPage(); }
        private object Activate_46_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::IntelligentKioskSample.Views.EmotionExpressionCapture>(); }
        private object Activate_47_Collection() { return new global::System.Collections.ObjectModel.Collection<global::IntelligentKioskSample.Views.EmotionExpressionCapture>(); }
        private object Activate_48_EmotionExpressionCapture() { return new global::IntelligentKioskSample.Views.EmotionExpressionCapture(); }
        private object Activate_50_RealTimeDemo() { return new global::IntelligentKioskSample.Views.RealTimeDemo(); }
        private object Activate_51_AutomaticPhotoCapturePage() { return new global::IntelligentKioskSample.Views.AutomaticPhotoCapturePage(); }
        private object Activate_52_ImageSearchUserControl() { return new global::IntelligentKioskSample.Controls.ImageSearchUserControl(); }
        private object Activate_53_PersonDetailsPage() { return new global::IntelligentKioskSample.Views.PersonDetailsPage(); }
        private object Activate_54_Person() { return new global::Microsoft.ProjectOxford.Face.Contract.Person(); }
        private object Activate_55_PersonGroup() { return new global::Microsoft.ProjectOxford.Face.Contract.PersonGroup(); }
        private object Activate_56_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Microsoft.ProjectOxford.Face.Contract.PersonFace>(); }
        private object Activate_57_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Microsoft.ProjectOxford.Face.Contract.PersonFace>(); }
        private object Activate_58_PersonFace() { return new global::Microsoft.ProjectOxford.Face.Contract.PersonFace(); }
        private object Activate_60_EmotionRecognitionPage() { return new global::IntelligentKioskSample.Views.EmotionRecognitionPage(); }
        private object Activate_61_RecognitionPage() { return new global::IntelligentKioskSample.Views.RecognitionPage(); }
        private object Activate_62_SettingsPage() { return new global::IntelligentKioskSample.Views.SettingsPage(); }
        private object Activate_63_NavMenuListView() { return new global::IntelligentKioskSample.Controls.NavMenuListView(); }
        private object Activate_66_AppShell() { return new global::IntelligentKioskSample.AppShell(); }
        private object Activate_69_PersonGroupDetailsPage() { return new global::IntelligentKioskSample.Views.PersonGroupDetailsPage(); }
        private object Activate_70_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Microsoft.ProjectOxford.Face.Contract.Person>(); }
        private object Activate_71_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Microsoft.ProjectOxford.Face.Contract.Person>(); }
        private object Activate_73_PersonGroupsPage() { return new global::IntelligentKioskSample.Views.PersonGroupsPage(); }
        private object Activate_74_LandingPage() { return new global::IntelligentKioskSample.Views.LandingPage(); }
        private void VectorAdd_36_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::IntelligentKioskSample.Views.NewsAndSentimentScore>)instance;
            var newItem = (global::IntelligentKioskSample.Views.NewsAndSentimentScore)item;
            collection.Add(newItem);
        }
        private void VectorAdd_37_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::IntelligentKioskSample.Views.NewsAndSentimentScore>)instance;
            var newItem = (global::IntelligentKioskSample.Views.NewsAndSentimentScore)item;
            collection.Add(newItem);
        }
        private void VectorAdd_41_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::IntelligentKioskSample.Views.KeyPhraseCount>)instance;
            var newItem = (global::IntelligentKioskSample.Views.KeyPhraseCount)item;
            collection.Add(newItem);
        }
        private void VectorAdd_42_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::IntelligentKioskSample.Views.KeyPhraseCount>)instance;
            var newItem = (global::IntelligentKioskSample.Views.KeyPhraseCount)item;
            collection.Add(newItem);
        }
        private void VectorAdd_46_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::IntelligentKioskSample.Views.EmotionExpressionCapture>)instance;
            var newItem = (global::IntelligentKioskSample.Views.EmotionExpressionCapture)item;
            collection.Add(newItem);
        }
        private void VectorAdd_47_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::IntelligentKioskSample.Views.EmotionExpressionCapture>)instance;
            var newItem = (global::IntelligentKioskSample.Views.EmotionExpressionCapture)item;
            collection.Add(newItem);
        }
        private void VectorAdd_56_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.ProjectOxford.Face.Contract.PersonFace>)instance;
            var newItem = (global::Microsoft.ProjectOxford.Face.Contract.PersonFace)item;
            collection.Add(newItem);
        }
        private void VectorAdd_57_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.ProjectOxford.Face.Contract.PersonFace>)instance;
            var newItem = (global::Microsoft.ProjectOxford.Face.Contract.PersonFace)item;
            collection.Add(newItem);
        }
        private void VectorAdd_70_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.ProjectOxford.Face.Contract.Person>)instance;
            var newItem = (global::Microsoft.ProjectOxford.Face.Contract.Person)item;
            collection.Add(newItem);
        }
        private void VectorAdd_71_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.ProjectOxford.Face.Contract.Person>)instance;
            var newItem = (global::Microsoft.ProjectOxford.Face.Contract.Person)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  IntelligentKioskSample.Controls.OverallStatsControl
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_0_OverallStatsControl;
                userType.AddMemberName("HeaderText");
                userType.AddMemberName("SubHeaderText");
                userType.AddMemberName("SubHeaderVisibility");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  String
                xamlType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  Windows.UI.Xaml.Visibility
                xamlType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 4:   //  IntelligentKioskSample.Controls.CameraControl
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_4_CameraControl;
                userType.AddMemberName("ShowDialogOnApiErrors");
                userType.AddMemberName("FilterOutSmallFaces");
                userType.AddMemberName("EnableAutoCaptureMode");
                userType.AddMemberName("CameraAspectRatio");
                userType.AddMemberName("CameraResolutionWidth");
                userType.AddMemberName("CameraResolutionHeight");
                userType.AddMemberName("NumFacesOnLastFrame");
                userType.AddMemberName("CameraStreamState");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 5:   //  Boolean
                xamlType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 6:   //  Double
                xamlType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 7:   //  Int32
                xamlType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 8:   //  Windows.Media.Devices.CameraStreamState
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("NotStreaming", global::Windows.Media.Devices.CameraStreamState.NotStreaming);
                userType.AddEnumValue("Streaming", global::Windows.Media.Devices.CameraStreamState.Streaming);
                userType.AddEnumValue("BlockedForPrivacy", global::Windows.Media.Devices.CameraStreamState.BlockedForPrivacy);
                userType.AddEnumValue("Shutdown", global::Windows.Media.Devices.CameraStreamState.Shutdown);
                xamlType = userType;
                break;

            case 9:   //  System.Enum
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 10:   //  System.ValueType
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 11:   //  Object
                xamlType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 12:   //  IntelligentKioskSample.Controls.SentimentControl
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_12_SentimentControl;
                userType.AddMemberName("Sentiment");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 13:   //  IntelligentKioskSample.Views.SentimentToColorConverter
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_13_SentimentToColorConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 14:   //  IntelligentKioskSample.Controls.VerticalBarWithValueControl
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_14_VerticalBarWithValueControl;
                userType.AddMemberName("BarColor1");
                userType.AddMemberName("ShowBarValue");
                userType.AddMemberName("BarColor2");
                userType.AddMemberName("BarValue");
                userType.AddMemberName("BarPercentage");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 15:   //  Windows.UI.Xaml.Media.SolidColorBrush
                xamlType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 16:   //  System.Nullable`1<Int32>
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 17:   //  IntelligentKioskSample.Controls.SentimentDistributionControl
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_17_SentimentDistributionControl;
                userType.AddMemberName("HeaderText");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 18:   //  IntelligentKioskSample.Controls.SpeechToTextControl
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_18_SpeechToTextControl;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 19:   //  IntelligentKioskSample.Controls.EmotionResponseTimelineControl
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_19_EmotionResponseTimelineControl;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 20:   //  IntelligentKioskSample.Controls.EmotionResponseStackBarControl
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_20_EmotionResponseStackBarControl;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 21:   //  IntelligentKioskSample.Controls.AgeGenderDistributionControl
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_21_AgeGenderDistributionControl;
                userType.AddMemberName("HeaderText");
                userType.AddMemberName("SubHeaderText");
                userType.AddMemberName("SubHeaderVisibility");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 22:   //  IntelligentKioskSample.Controls.EmotionEmojiControl
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_22_EmotionEmojiControl;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 23:   //  IntelligentKioskSample.Controls.RealTimeFaceIdentificationBorder
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_23_RealTimeFaceIdentificationBorder;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 24:   //  IntelligentKioskSample.Controls.EmotionMeterControl
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_24_EmotionMeterControl;
                userType.AddMemberName("EmotionName");
                userType.AddMemberName("EmotionValue");
                userType.AddMemberName("MeterForeground");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 25:   //  Single
                xamlType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 26:   //  IntelligentKioskSample.Controls.FaceIdentificationBorder
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_26_FaceIdentificationBorder;
                userType.AddMemberName("BalloonBackground");
                userType.AddMemberName("BalloonForeground");
                userType.AddMemberName("CaptionText");
                userType.AddMemberName("EmotionData");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 27:   //  ServiceHelpers.EmotionData[]
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Array"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 28:   //  System.Array
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 29:   //  ServiceHelpers.EmotionData
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_29_EmotionData;
                userType.AddMemberName("EmotionName");
                userType.AddMemberName("EmotionScore");
                xamlType = userType;
                break;

            case 30:   //  IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_30_ImageWithFaceBorderUserControl;
                userType.AddMemberName("BalloonBackground");
                userType.AddMemberName("BalloonForeground");
                userType.AddMemberName("ShowEmotionRecognition");
                userType.AddMemberName("ShowMultipleFaces");
                userType.AddMemberName("DetectFacesOnLoad");
                userType.AddMemberName("DetectFaceAttributes");
                userType.AddMemberName("PerformRecognition");
                userType.AddMemberName("ShowRecognitionResults");
                userType.AddMemberName("ShowDialogOnApiErrors");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 31:   //  IntelligentKioskSample.Controls.PageHeader
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_31_PageHeader;
                userType.AddMemberName("HeaderContent");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 32:   //  Windows.UI.Xaml.UIElement
                xamlType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 33:   //  IntelligentKioskSample.Views.WordCountToFontSizeConverter
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_33_WordCountToFontSizeConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 34:   //  IntelligentKioskSample.Views.BingNewsAnalyticsPage
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_34_BingNewsAnalyticsPage;
                userType.AddMemberName("FilteredNewsResults");
                userType.AddMemberName("TopKeyPhrases");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 35:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 36:   //  System.Collections.ObjectModel.ObservableCollection`1<IntelligentKioskSample.Views.NewsAndSentimentScore>
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<IntelligentKioskSample.Views.NewsAndSentimentScore>"));
                userType.CollectionAdd = VectorAdd_36_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 37:   //  System.Collections.ObjectModel.Collection`1<IntelligentKioskSample.Views.NewsAndSentimentScore>
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_37_Collection;
                userType.CollectionAdd = VectorAdd_37_Collection;
                xamlType = userType;
                break;

            case 38:   //  IntelligentKioskSample.Views.NewsAndSentimentScore
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_38_NewsAndSentimentScore;
                userType.AddMemberName("Article");
                userType.AddMemberName("TitleSentiment");
                userType.AddMemberName("KeyPhrases");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 39:   //  ServiceHelpers.NewsArticle
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 40:   //  System.Collections.Generic.IEnumerable`1<String>
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 41:   //  System.Collections.ObjectModel.ObservableCollection`1<IntelligentKioskSample.Views.KeyPhraseCount>
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<IntelligentKioskSample.Views.KeyPhraseCount>"));
                userType.CollectionAdd = VectorAdd_41_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 42:   //  System.Collections.ObjectModel.Collection`1<IntelligentKioskSample.Views.KeyPhraseCount>
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_42_Collection;
                userType.CollectionAdd = VectorAdd_42_Collection;
                xamlType = userType;
                break;

            case 43:   //  IntelligentKioskSample.Views.KeyPhraseCount
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_43_KeyPhraseCount;
                userType.AddMemberName("KeyPhrase");
                userType.AddMemberName("Count");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 44:   //  IntelligentKioskSample.Views.DemoLauncherPage
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_44_DemoLauncherPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 45:   //  IntelligentKioskSample.Views.MallKioskPage
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_45_MallKioskPage;
                userType.AddMemberName("EmotionFaces");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 46:   //  System.Collections.ObjectModel.ObservableCollection`1<IntelligentKioskSample.Views.EmotionExpressionCapture>
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<IntelligentKioskSample.Views.EmotionExpressionCapture>"));
                userType.CollectionAdd = VectorAdd_46_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 47:   //  System.Collections.ObjectModel.Collection`1<IntelligentKioskSample.Views.EmotionExpressionCapture>
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_47_Collection;
                userType.CollectionAdd = VectorAdd_47_Collection;
                xamlType = userType;
                break;

            case 48:   //  IntelligentKioskSample.Views.EmotionExpressionCapture
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_48_EmotionExpressionCapture;
                userType.AddMemberName("CroppedFace");
                userType.AddMemberName("TopEmotion");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 49:   //  Windows.UI.Xaml.Media.ImageSource
                xamlType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 50:   //  IntelligentKioskSample.Views.RealTimeDemo
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_50_RealTimeDemo;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 51:   //  IntelligentKioskSample.Views.AutomaticPhotoCapturePage
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_51_AutomaticPhotoCapturePage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 52:   //  IntelligentKioskSample.Controls.ImageSearchUserControl
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_52_ImageSearchUserControl;
                userType.AddMemberName("DetectFacesOnLoad");
                userType.AddMemberName("ClearStateWhenClosed");
                userType.AddMemberName("DefaultSearchQuery");
                userType.AddMemberName("ImageContentType");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 53:   //  IntelligentKioskSample.Views.PersonDetailsPage
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_53_PersonDetailsPage;
                userType.AddMemberName("CurrentPerson");
                userType.AddMemberName("CurrentPersonGroup");
                userType.AddMemberName("PersonFaces");
                userType.AddMemberName("HeaderText");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 54:   //  Microsoft.ProjectOxford.Face.Contract.Person
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_54_Person;
                userType.AddMemberName("PersonId");
                userType.AddMemberName("PersistedFaceIds");
                userType.AddMemberName("Name");
                userType.AddMemberName("UserData");
                xamlType = userType;
                break;

            case 55:   //  Microsoft.ProjectOxford.Face.Contract.PersonGroup
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 56:   //  System.Collections.ObjectModel.ObservableCollection`1<Microsoft.ProjectOxford.Face.Contract.PersonFace>
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Microsoft.ProjectOxford.Face.Contract.PersonFace>"));
                userType.CollectionAdd = VectorAdd_56_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 57:   //  System.Collections.ObjectModel.Collection`1<Microsoft.ProjectOxford.Face.Contract.PersonFace>
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_57_Collection;
                userType.CollectionAdd = VectorAdd_57_Collection;
                xamlType = userType;
                break;

            case 58:   //  Microsoft.ProjectOxford.Face.Contract.PersonFace
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_58_PersonFace;
                userType.AddMemberName("PersistedFaceId");
                userType.AddMemberName("UserData");
                xamlType = userType;
                break;

            case 59:   //  Guid
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 60:   //  IntelligentKioskSample.Views.EmotionRecognitionPage
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_60_EmotionRecognitionPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 61:   //  IntelligentKioskSample.Views.RecognitionPage
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_61_RecognitionPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 62:   //  IntelligentKioskSample.Views.SettingsPage
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_62_SettingsPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 63:   //  IntelligentKioskSample.Controls.NavMenuListView
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ListView"));
                userType.Activator = Activate_63_NavMenuListView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 64:   //  Windows.UI.Xaml.Controls.ListView
                xamlType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 65:   //  Windows.UI.Xaml.Controls.ItemsControl
                xamlType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 66:   //  IntelligentKioskSample.AppShell
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_66_AppShell;
                userType.AddMemberName("AppFrame");
                userType.AddMemberName("TogglePaneButtonRect");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 67:   //  Windows.UI.Xaml.Controls.Frame
                xamlType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 68:   //  Windows.Foundation.Rect
                xamlType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 69:   //  IntelligentKioskSample.Views.PersonGroupDetailsPage
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_69_PersonGroupDetailsPage;
                userType.AddMemberName("CurrentPersonGroup");
                userType.AddMemberName("PersonsInCurrentGroup");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 70:   //  System.Collections.ObjectModel.ObservableCollection`1<Microsoft.ProjectOxford.Face.Contract.Person>
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Microsoft.ProjectOxford.Face.Contract.Person>"));
                userType.CollectionAdd = VectorAdd_70_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 71:   //  System.Collections.ObjectModel.Collection`1<Microsoft.ProjectOxford.Face.Contract.Person>
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_71_Collection;
                userType.CollectionAdd = VectorAdd_71_Collection;
                xamlType = userType;
                break;

            case 72:   //  Guid[]
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Array"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 73:   //  IntelligentKioskSample.Views.PersonGroupsPage
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_73_PersonGroupsPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 74:   //  IntelligentKioskSample.Views.LandingPage
                userType = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_74_LandingPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;
            }
            return xamlType;
        }


        private object get_0_OverallStatsControl_HeaderText(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.OverallStatsControl)instance;
            return that.HeaderText;
        }
        private void set_0_OverallStatsControl_HeaderText(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.OverallStatsControl)instance;
            that.HeaderText = (global::System.String)Value;
        }
        private object get_1_OverallStatsControl_SubHeaderText(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.OverallStatsControl)instance;
            return that.SubHeaderText;
        }
        private void set_1_OverallStatsControl_SubHeaderText(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.OverallStatsControl)instance;
            that.SubHeaderText = (global::System.String)Value;
        }
        private object get_2_OverallStatsControl_SubHeaderVisibility(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.OverallStatsControl)instance;
            return that.SubHeaderVisibility;
        }
        private void set_2_OverallStatsControl_SubHeaderVisibility(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.OverallStatsControl)instance;
            that.SubHeaderVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_3_CameraControl_ShowDialogOnApiErrors(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.CameraControl)instance;
            return that.ShowDialogOnApiErrors;
        }
        private void set_3_CameraControl_ShowDialogOnApiErrors(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.CameraControl)instance;
            that.ShowDialogOnApiErrors = (global::System.Boolean)Value;
        }
        private object get_4_CameraControl_FilterOutSmallFaces(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.CameraControl)instance;
            return that.FilterOutSmallFaces;
        }
        private void set_4_CameraControl_FilterOutSmallFaces(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.CameraControl)instance;
            that.FilterOutSmallFaces = (global::System.Boolean)Value;
        }
        private object get_5_CameraControl_EnableAutoCaptureMode(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.CameraControl)instance;
            return that.EnableAutoCaptureMode;
        }
        private void set_5_CameraControl_EnableAutoCaptureMode(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.CameraControl)instance;
            that.EnableAutoCaptureMode = (global::System.Boolean)Value;
        }
        private object get_6_CameraControl_CameraAspectRatio(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.CameraControl)instance;
            return that.CameraAspectRatio;
        }
        private void set_6_CameraControl_CameraAspectRatio(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.CameraControl)instance;
            that.CameraAspectRatio = (global::System.Double)Value;
        }
        private object get_7_CameraControl_CameraResolutionWidth(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.CameraControl)instance;
            return that.CameraResolutionWidth;
        }
        private object get_8_CameraControl_CameraResolutionHeight(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.CameraControl)instance;
            return that.CameraResolutionHeight;
        }
        private object get_9_CameraControl_NumFacesOnLastFrame(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.CameraControl)instance;
            return that.NumFacesOnLastFrame;
        }
        private void set_9_CameraControl_NumFacesOnLastFrame(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.CameraControl)instance;
            that.NumFacesOnLastFrame = (global::System.Int32)Value;
        }
        private object get_10_CameraControl_CameraStreamState(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.CameraControl)instance;
            return that.CameraStreamState;
        }
        private object get_11_SentimentControl_Sentiment(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.SentimentControl)instance;
            return that.Sentiment;
        }
        private void set_11_SentimentControl_Sentiment(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.SentimentControl)instance;
            that.Sentiment = (global::System.Double)Value;
        }
        private object get_12_VerticalBarWithValueControl_BarColor1(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.VerticalBarWithValueControl)instance;
            return that.BarColor1;
        }
        private void set_12_VerticalBarWithValueControl_BarColor1(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.VerticalBarWithValueControl)instance;
            that.BarColor1 = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_13_VerticalBarWithValueControl_ShowBarValue(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.VerticalBarWithValueControl)instance;
            return that.ShowBarValue;
        }
        private void set_13_VerticalBarWithValueControl_ShowBarValue(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.VerticalBarWithValueControl)instance;
            that.ShowBarValue = (global::System.Boolean)Value;
        }
        private object get_14_VerticalBarWithValueControl_BarColor2(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.VerticalBarWithValueControl)instance;
            return that.BarColor2;
        }
        private void set_14_VerticalBarWithValueControl_BarColor2(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.VerticalBarWithValueControl)instance;
            that.BarColor2 = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_15_VerticalBarWithValueControl_BarValue(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.VerticalBarWithValueControl)instance;
            return that.BarValue;
        }
        private void set_15_VerticalBarWithValueControl_BarValue(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.VerticalBarWithValueControl)instance;
            that.BarValue = (global::System.Nullable<global::System.Int32>)Value;
        }
        private object get_16_VerticalBarWithValueControl_BarPercentage(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.VerticalBarWithValueControl)instance;
            return that.BarPercentage;
        }
        private void set_16_VerticalBarWithValueControl_BarPercentage(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.VerticalBarWithValueControl)instance;
            that.BarPercentage = (global::System.Double)Value;
        }
        private object get_17_SentimentDistributionControl_HeaderText(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.SentimentDistributionControl)instance;
            return that.HeaderText;
        }
        private void set_17_SentimentDistributionControl_HeaderText(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.SentimentDistributionControl)instance;
            that.HeaderText = (global::System.String)Value;
        }
        private object get_18_AgeGenderDistributionControl_HeaderText(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.AgeGenderDistributionControl)instance;
            return that.HeaderText;
        }
        private void set_18_AgeGenderDistributionControl_HeaderText(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.AgeGenderDistributionControl)instance;
            that.HeaderText = (global::System.String)Value;
        }
        private object get_19_AgeGenderDistributionControl_SubHeaderText(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.AgeGenderDistributionControl)instance;
            return that.SubHeaderText;
        }
        private void set_19_AgeGenderDistributionControl_SubHeaderText(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.AgeGenderDistributionControl)instance;
            that.SubHeaderText = (global::System.String)Value;
        }
        private object get_20_AgeGenderDistributionControl_SubHeaderVisibility(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.AgeGenderDistributionControl)instance;
            return that.SubHeaderVisibility;
        }
        private void set_20_AgeGenderDistributionControl_SubHeaderVisibility(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.AgeGenderDistributionControl)instance;
            that.SubHeaderVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_21_EmotionMeterControl_EmotionName(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.EmotionMeterControl)instance;
            return that.EmotionName;
        }
        private void set_21_EmotionMeterControl_EmotionName(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.EmotionMeterControl)instance;
            that.EmotionName = (global::System.String)Value;
        }
        private object get_22_EmotionMeterControl_EmotionValue(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.EmotionMeterControl)instance;
            return that.EmotionValue;
        }
        private void set_22_EmotionMeterControl_EmotionValue(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.EmotionMeterControl)instance;
            that.EmotionValue = (global::System.Single)Value;
        }
        private object get_23_EmotionMeterControl_MeterForeground(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.EmotionMeterControl)instance;
            return that.MeterForeground;
        }
        private void set_23_EmotionMeterControl_MeterForeground(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.EmotionMeterControl)instance;
            that.MeterForeground = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_24_FaceIdentificationBorder_BalloonBackground(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.FaceIdentificationBorder)instance;
            return that.BalloonBackground;
        }
        private void set_24_FaceIdentificationBorder_BalloonBackground(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.FaceIdentificationBorder)instance;
            that.BalloonBackground = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_25_FaceIdentificationBorder_BalloonForeground(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.FaceIdentificationBorder)instance;
            return that.BalloonForeground;
        }
        private void set_25_FaceIdentificationBorder_BalloonForeground(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.FaceIdentificationBorder)instance;
            that.BalloonForeground = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_26_FaceIdentificationBorder_CaptionText(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.FaceIdentificationBorder)instance;
            return that.CaptionText;
        }
        private void set_26_FaceIdentificationBorder_CaptionText(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.FaceIdentificationBorder)instance;
            that.CaptionText = (global::System.String)Value;
        }
        private object get_27_FaceIdentificationBorder_EmotionData(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.FaceIdentificationBorder)instance;
            return that.EmotionData;
        }
        private void set_27_FaceIdentificationBorder_EmotionData(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.FaceIdentificationBorder)instance;
            that.EmotionData = (global::ServiceHelpers.EmotionData[])Value;
        }
        private object get_28_EmotionData_EmotionName(object instance)
        {
            var that = (global::ServiceHelpers.EmotionData)instance;
            return that.EmotionName;
        }
        private void set_28_EmotionData_EmotionName(object instance, object Value)
        {
            var that = (global::ServiceHelpers.EmotionData)instance;
            that.EmotionName = (global::System.String)Value;
        }
        private object get_29_EmotionData_EmotionScore(object instance)
        {
            var that = (global::ServiceHelpers.EmotionData)instance;
            return that.EmotionScore;
        }
        private void set_29_EmotionData_EmotionScore(object instance, object Value)
        {
            var that = (global::ServiceHelpers.EmotionData)instance;
            that.EmotionScore = (global::System.Single)Value;
        }
        private object get_30_ImageWithFaceBorderUserControl_BalloonBackground(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl)instance;
            return that.BalloonBackground;
        }
        private void set_30_ImageWithFaceBorderUserControl_BalloonBackground(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl)instance;
            that.BalloonBackground = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_31_ImageWithFaceBorderUserControl_BalloonForeground(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl)instance;
            return that.BalloonForeground;
        }
        private void set_31_ImageWithFaceBorderUserControl_BalloonForeground(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl)instance;
            that.BalloonForeground = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_32_ImageWithFaceBorderUserControl_ShowEmotionRecognition(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl)instance;
            return that.ShowEmotionRecognition;
        }
        private void set_32_ImageWithFaceBorderUserControl_ShowEmotionRecognition(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl)instance;
            that.ShowEmotionRecognition = (global::System.Boolean)Value;
        }
        private object get_33_ImageWithFaceBorderUserControl_ShowMultipleFaces(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl)instance;
            return that.ShowMultipleFaces;
        }
        private void set_33_ImageWithFaceBorderUserControl_ShowMultipleFaces(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl)instance;
            that.ShowMultipleFaces = (global::System.Boolean)Value;
        }
        private object get_34_ImageWithFaceBorderUserControl_DetectFacesOnLoad(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl)instance;
            return that.DetectFacesOnLoad;
        }
        private void set_34_ImageWithFaceBorderUserControl_DetectFacesOnLoad(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl)instance;
            that.DetectFacesOnLoad = (global::System.Boolean)Value;
        }
        private object get_35_ImageWithFaceBorderUserControl_DetectFaceAttributes(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl)instance;
            return that.DetectFaceAttributes;
        }
        private void set_35_ImageWithFaceBorderUserControl_DetectFaceAttributes(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl)instance;
            that.DetectFaceAttributes = (global::System.Boolean)Value;
        }
        private object get_36_ImageWithFaceBorderUserControl_PerformRecognition(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl)instance;
            return that.PerformRecognition;
        }
        private void set_36_ImageWithFaceBorderUserControl_PerformRecognition(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl)instance;
            that.PerformRecognition = (global::System.Boolean)Value;
        }
        private object get_37_ImageWithFaceBorderUserControl_ShowRecognitionResults(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl)instance;
            return that.ShowRecognitionResults;
        }
        private void set_37_ImageWithFaceBorderUserControl_ShowRecognitionResults(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl)instance;
            that.ShowRecognitionResults = (global::System.Boolean)Value;
        }
        private object get_38_ImageWithFaceBorderUserControl_ShowDialogOnApiErrors(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl)instance;
            return that.ShowDialogOnApiErrors;
        }
        private void set_38_ImageWithFaceBorderUserControl_ShowDialogOnApiErrors(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl)instance;
            that.ShowDialogOnApiErrors = (global::System.Boolean)Value;
        }
        private object get_39_PageHeader_HeaderContent(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.PageHeader)instance;
            return that.HeaderContent;
        }
        private void set_39_PageHeader_HeaderContent(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.PageHeader)instance;
            that.HeaderContent = (global::Windows.UI.Xaml.UIElement)Value;
        }
        private object get_40_BingNewsAnalyticsPage_FilteredNewsResults(object instance)
        {
            var that = (global::IntelligentKioskSample.Views.BingNewsAnalyticsPage)instance;
            return that.FilteredNewsResults;
        }
        private void set_40_BingNewsAnalyticsPage_FilteredNewsResults(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Views.BingNewsAnalyticsPage)instance;
            that.FilteredNewsResults = (global::System.Collections.ObjectModel.ObservableCollection<global::IntelligentKioskSample.Views.NewsAndSentimentScore>)Value;
        }
        private object get_41_NewsAndSentimentScore_Article(object instance)
        {
            var that = (global::IntelligentKioskSample.Views.NewsAndSentimentScore)instance;
            return that.Article;
        }
        private void set_41_NewsAndSentimentScore_Article(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Views.NewsAndSentimentScore)instance;
            that.Article = (global::ServiceHelpers.NewsArticle)Value;
        }
        private object get_42_NewsAndSentimentScore_TitleSentiment(object instance)
        {
            var that = (global::IntelligentKioskSample.Views.NewsAndSentimentScore)instance;
            return that.TitleSentiment;
        }
        private void set_42_NewsAndSentimentScore_TitleSentiment(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Views.NewsAndSentimentScore)instance;
            that.TitleSentiment = (global::System.Double)Value;
        }
        private object get_43_NewsAndSentimentScore_KeyPhrases(object instance)
        {
            var that = (global::IntelligentKioskSample.Views.NewsAndSentimentScore)instance;
            return that.KeyPhrases;
        }
        private void set_43_NewsAndSentimentScore_KeyPhrases(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Views.NewsAndSentimentScore)instance;
            that.KeyPhrases = (global::System.Collections.Generic.IEnumerable<global::System.String>)Value;
        }
        private object get_44_BingNewsAnalyticsPage_TopKeyPhrases(object instance)
        {
            var that = (global::IntelligentKioskSample.Views.BingNewsAnalyticsPage)instance;
            return that.TopKeyPhrases;
        }
        private void set_44_BingNewsAnalyticsPage_TopKeyPhrases(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Views.BingNewsAnalyticsPage)instance;
            that.TopKeyPhrases = (global::System.Collections.ObjectModel.ObservableCollection<global::IntelligentKioskSample.Views.KeyPhraseCount>)Value;
        }
        private object get_45_KeyPhraseCount_KeyPhrase(object instance)
        {
            var that = (global::IntelligentKioskSample.Views.KeyPhraseCount)instance;
            return that.KeyPhrase;
        }
        private void set_45_KeyPhraseCount_KeyPhrase(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Views.KeyPhraseCount)instance;
            that.KeyPhrase = (global::System.String)Value;
        }
        private object get_46_KeyPhraseCount_Count(object instance)
        {
            var that = (global::IntelligentKioskSample.Views.KeyPhraseCount)instance;
            return that.Count;
        }
        private void set_46_KeyPhraseCount_Count(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Views.KeyPhraseCount)instance;
            that.Count = (global::System.Int32)Value;
        }
        private object get_47_MallKioskPage_EmotionFaces(object instance)
        {
            var that = (global::IntelligentKioskSample.Views.MallKioskPage)instance;
            return that.EmotionFaces;
        }
        private void set_47_MallKioskPage_EmotionFaces(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Views.MallKioskPage)instance;
            that.EmotionFaces = (global::System.Collections.ObjectModel.ObservableCollection<global::IntelligentKioskSample.Views.EmotionExpressionCapture>)Value;
        }
        private object get_48_EmotionExpressionCapture_CroppedFace(object instance)
        {
            var that = (global::IntelligentKioskSample.Views.EmotionExpressionCapture)instance;
            return that.CroppedFace;
        }
        private void set_48_EmotionExpressionCapture_CroppedFace(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Views.EmotionExpressionCapture)instance;
            that.CroppedFace = (global::Windows.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_49_EmotionExpressionCapture_TopEmotion(object instance)
        {
            var that = (global::IntelligentKioskSample.Views.EmotionExpressionCapture)instance;
            return that.TopEmotion;
        }
        private void set_49_EmotionExpressionCapture_TopEmotion(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Views.EmotionExpressionCapture)instance;
            that.TopEmotion = (global::System.String)Value;
        }
        private object get_50_ImageSearchUserControl_DetectFacesOnLoad(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.ImageSearchUserControl)instance;
            return that.DetectFacesOnLoad;
        }
        private void set_50_ImageSearchUserControl_DetectFacesOnLoad(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.ImageSearchUserControl)instance;
            that.DetectFacesOnLoad = (global::System.Boolean)Value;
        }
        private object get_51_ImageSearchUserControl_ClearStateWhenClosed(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.ImageSearchUserControl)instance;
            return that.ClearStateWhenClosed;
        }
        private void set_51_ImageSearchUserControl_ClearStateWhenClosed(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.ImageSearchUserControl)instance;
            that.ClearStateWhenClosed = (global::System.Boolean)Value;
        }
        private object get_52_ImageSearchUserControl_DefaultSearchQuery(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.ImageSearchUserControl)instance;
            return that.DefaultSearchQuery;
        }
        private void set_52_ImageSearchUserControl_DefaultSearchQuery(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.ImageSearchUserControl)instance;
            that.DefaultSearchQuery = (global::System.String)Value;
        }
        private object get_53_ImageSearchUserControl_ImageContentType(object instance)
        {
            var that = (global::IntelligentKioskSample.Controls.ImageSearchUserControl)instance;
            return that.ImageContentType;
        }
        private void set_53_ImageSearchUserControl_ImageContentType(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Controls.ImageSearchUserControl)instance;
            that.ImageContentType = (global::System.String)Value;
        }
        private object get_54_PersonDetailsPage_CurrentPerson(object instance)
        {
            var that = (global::IntelligentKioskSample.Views.PersonDetailsPage)instance;
            return that.CurrentPerson;
        }
        private void set_54_PersonDetailsPage_CurrentPerson(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Views.PersonDetailsPage)instance;
            that.CurrentPerson = (global::Microsoft.ProjectOxford.Face.Contract.Person)Value;
        }
        private object get_55_PersonDetailsPage_CurrentPersonGroup(object instance)
        {
            var that = (global::IntelligentKioskSample.Views.PersonDetailsPage)instance;
            return that.CurrentPersonGroup;
        }
        private void set_55_PersonDetailsPage_CurrentPersonGroup(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Views.PersonDetailsPage)instance;
            that.CurrentPersonGroup = (global::Microsoft.ProjectOxford.Face.Contract.PersonGroup)Value;
        }
        private object get_56_PersonDetailsPage_PersonFaces(object instance)
        {
            var that = (global::IntelligentKioskSample.Views.PersonDetailsPage)instance;
            return that.PersonFaces;
        }
        private void set_56_PersonDetailsPage_PersonFaces(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Views.PersonDetailsPage)instance;
            that.PersonFaces = (global::System.Collections.ObjectModel.ObservableCollection<global::Microsoft.ProjectOxford.Face.Contract.PersonFace>)Value;
        }
        private object get_57_PersonFace_PersistedFaceId(object instance)
        {
            var that = (global::Microsoft.ProjectOxford.Face.Contract.PersonFace)instance;
            return that.PersistedFaceId;
        }
        private void set_57_PersonFace_PersistedFaceId(object instance, object Value)
        {
            var that = (global::Microsoft.ProjectOxford.Face.Contract.PersonFace)instance;
            that.PersistedFaceId = (global::System.Guid)Value;
        }
        private object get_58_PersonFace_UserData(object instance)
        {
            var that = (global::Microsoft.ProjectOxford.Face.Contract.PersonFace)instance;
            return that.UserData;
        }
        private void set_58_PersonFace_UserData(object instance, object Value)
        {
            var that = (global::Microsoft.ProjectOxford.Face.Contract.PersonFace)instance;
            that.UserData = (global::System.String)Value;
        }
        private object get_59_PersonDetailsPage_HeaderText(object instance)
        {
            var that = (global::IntelligentKioskSample.Views.PersonDetailsPage)instance;
            return that.HeaderText;
        }
        private void set_59_PersonDetailsPage_HeaderText(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Views.PersonDetailsPage)instance;
            that.HeaderText = (global::System.String)Value;
        }
        private object get_60_AppShell_AppFrame(object instance)
        {
            var that = (global::IntelligentKioskSample.AppShell)instance;
            return that.AppFrame;
        }
        private object get_61_AppShell_TogglePaneButtonRect(object instance)
        {
            var that = (global::IntelligentKioskSample.AppShell)instance;
            return that.TogglePaneButtonRect;
        }
        private object get_62_PersonGroupDetailsPage_CurrentPersonGroup(object instance)
        {
            var that = (global::IntelligentKioskSample.Views.PersonGroupDetailsPage)instance;
            return that.CurrentPersonGroup;
        }
        private void set_62_PersonGroupDetailsPage_CurrentPersonGroup(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Views.PersonGroupDetailsPage)instance;
            that.CurrentPersonGroup = (global::Microsoft.ProjectOxford.Face.Contract.PersonGroup)Value;
        }
        private object get_63_PersonGroupDetailsPage_PersonsInCurrentGroup(object instance)
        {
            var that = (global::IntelligentKioskSample.Views.PersonGroupDetailsPage)instance;
            return that.PersonsInCurrentGroup;
        }
        private void set_63_PersonGroupDetailsPage_PersonsInCurrentGroup(object instance, object Value)
        {
            var that = (global::IntelligentKioskSample.Views.PersonGroupDetailsPage)instance;
            that.PersonsInCurrentGroup = (global::System.Collections.ObjectModel.ObservableCollection<global::Microsoft.ProjectOxford.Face.Contract.Person>)Value;
        }
        private object get_64_Person_PersonId(object instance)
        {
            var that = (global::Microsoft.ProjectOxford.Face.Contract.Person)instance;
            return that.PersonId;
        }
        private void set_64_Person_PersonId(object instance, object Value)
        {
            var that = (global::Microsoft.ProjectOxford.Face.Contract.Person)instance;
            that.PersonId = (global::System.Guid)Value;
        }
        private object get_65_Person_PersistedFaceIds(object instance)
        {
            var that = (global::Microsoft.ProjectOxford.Face.Contract.Person)instance;
            return that.PersistedFaceIds;
        }
        private void set_65_Person_PersistedFaceIds(object instance, object Value)
        {
            var that = (global::Microsoft.ProjectOxford.Face.Contract.Person)instance;
            that.PersistedFaceIds = (global::System.Guid[])Value;
        }
        private object get_66_Person_Name(object instance)
        {
            var that = (global::Microsoft.ProjectOxford.Face.Contract.Person)instance;
            return that.Name;
        }
        private void set_66_Person_Name(object instance, object Value)
        {
            var that = (global::Microsoft.ProjectOxford.Face.Contract.Person)instance;
            that.Name = (global::System.String)Value;
        }
        private object get_67_Person_UserData(object instance)
        {
            var that = (global::Microsoft.ProjectOxford.Face.Contract.Person)instance;
            return that.UserData;
        }
        private void set_67_Person_UserData(object instance, object Value)
        {
            var that = (global::Microsoft.ProjectOxford.Face.Contract.Person)instance;
            that.UserData = (global::System.String)Value;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember xamlMember = null;
            global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "IntelligentKioskSample.Controls.OverallStatsControl.HeaderText":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.OverallStatsControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "HeaderText", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_0_OverallStatsControl_HeaderText;
                xamlMember.Setter = set_0_OverallStatsControl_HeaderText;
                break;
            case "IntelligentKioskSample.Controls.OverallStatsControl.SubHeaderText":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.OverallStatsControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "SubHeaderText", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_1_OverallStatsControl_SubHeaderText;
                xamlMember.Setter = set_1_OverallStatsControl_SubHeaderText;
                break;
            case "IntelligentKioskSample.Controls.OverallStatsControl.SubHeaderVisibility":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.OverallStatsControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "SubHeaderVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_2_OverallStatsControl_SubHeaderVisibility;
                xamlMember.Setter = set_2_OverallStatsControl_SubHeaderVisibility;
                break;
            case "IntelligentKioskSample.Controls.CameraControl.ShowDialogOnApiErrors":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.CameraControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "ShowDialogOnApiErrors", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_3_CameraControl_ShowDialogOnApiErrors;
                xamlMember.Setter = set_3_CameraControl_ShowDialogOnApiErrors;
                break;
            case "IntelligentKioskSample.Controls.CameraControl.FilterOutSmallFaces":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.CameraControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "FilterOutSmallFaces", "Boolean");
                xamlMember.Getter = get_4_CameraControl_FilterOutSmallFaces;
                xamlMember.Setter = set_4_CameraControl_FilterOutSmallFaces;
                break;
            case "IntelligentKioskSample.Controls.CameraControl.EnableAutoCaptureMode":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.CameraControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "EnableAutoCaptureMode", "Boolean");
                xamlMember.Getter = get_5_CameraControl_EnableAutoCaptureMode;
                xamlMember.Setter = set_5_CameraControl_EnableAutoCaptureMode;
                break;
            case "IntelligentKioskSample.Controls.CameraControl.CameraAspectRatio":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.CameraControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "CameraAspectRatio", "Double");
                xamlMember.Getter = get_6_CameraControl_CameraAspectRatio;
                xamlMember.Setter = set_6_CameraControl_CameraAspectRatio;
                break;
            case "IntelligentKioskSample.Controls.CameraControl.CameraResolutionWidth":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.CameraControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "CameraResolutionWidth", "Int32");
                xamlMember.Getter = get_7_CameraControl_CameraResolutionWidth;
                xamlMember.SetIsReadOnly();
                break;
            case "IntelligentKioskSample.Controls.CameraControl.CameraResolutionHeight":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.CameraControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "CameraResolutionHeight", "Int32");
                xamlMember.Getter = get_8_CameraControl_CameraResolutionHeight;
                xamlMember.SetIsReadOnly();
                break;
            case "IntelligentKioskSample.Controls.CameraControl.NumFacesOnLastFrame":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.CameraControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "NumFacesOnLastFrame", "Int32");
                xamlMember.Getter = get_9_CameraControl_NumFacesOnLastFrame;
                xamlMember.Setter = set_9_CameraControl_NumFacesOnLastFrame;
                break;
            case "IntelligentKioskSample.Controls.CameraControl.CameraStreamState":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.CameraControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "CameraStreamState", "Windows.Media.Devices.CameraStreamState");
                xamlMember.Getter = get_10_CameraControl_CameraStreamState;
                xamlMember.SetIsReadOnly();
                break;
            case "IntelligentKioskSample.Controls.SentimentControl.Sentiment":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.SentimentControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "Sentiment", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_11_SentimentControl_Sentiment;
                xamlMember.Setter = set_11_SentimentControl_Sentiment;
                break;
            case "IntelligentKioskSample.Controls.VerticalBarWithValueControl.BarColor1":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.VerticalBarWithValueControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "BarColor1", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_VerticalBarWithValueControl_BarColor1;
                xamlMember.Setter = set_12_VerticalBarWithValueControl_BarColor1;
                break;
            case "IntelligentKioskSample.Controls.VerticalBarWithValueControl.ShowBarValue":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.VerticalBarWithValueControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "ShowBarValue", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_VerticalBarWithValueControl_ShowBarValue;
                xamlMember.Setter = set_13_VerticalBarWithValueControl_ShowBarValue;
                break;
            case "IntelligentKioskSample.Controls.VerticalBarWithValueControl.BarColor2":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.VerticalBarWithValueControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "BarColor2", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_VerticalBarWithValueControl_BarColor2;
                xamlMember.Setter = set_14_VerticalBarWithValueControl_BarColor2;
                break;
            case "IntelligentKioskSample.Controls.VerticalBarWithValueControl.BarValue":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.VerticalBarWithValueControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "BarValue", "System.Nullable`1<Int32>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_VerticalBarWithValueControl_BarValue;
                xamlMember.Setter = set_15_VerticalBarWithValueControl_BarValue;
                break;
            case "IntelligentKioskSample.Controls.VerticalBarWithValueControl.BarPercentage":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.VerticalBarWithValueControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "BarPercentage", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_16_VerticalBarWithValueControl_BarPercentage;
                xamlMember.Setter = set_16_VerticalBarWithValueControl_BarPercentage;
                break;
            case "IntelligentKioskSample.Controls.SentimentDistributionControl.HeaderText":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.SentimentDistributionControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "HeaderText", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_17_SentimentDistributionControl_HeaderText;
                xamlMember.Setter = set_17_SentimentDistributionControl_HeaderText;
                break;
            case "IntelligentKioskSample.Controls.AgeGenderDistributionControl.HeaderText":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.AgeGenderDistributionControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "HeaderText", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_AgeGenderDistributionControl_HeaderText;
                xamlMember.Setter = set_18_AgeGenderDistributionControl_HeaderText;
                break;
            case "IntelligentKioskSample.Controls.AgeGenderDistributionControl.SubHeaderText":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.AgeGenderDistributionControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "SubHeaderText", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_19_AgeGenderDistributionControl_SubHeaderText;
                xamlMember.Setter = set_19_AgeGenderDistributionControl_SubHeaderText;
                break;
            case "IntelligentKioskSample.Controls.AgeGenderDistributionControl.SubHeaderVisibility":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.AgeGenderDistributionControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "SubHeaderVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_20_AgeGenderDistributionControl_SubHeaderVisibility;
                xamlMember.Setter = set_20_AgeGenderDistributionControl_SubHeaderVisibility;
                break;
            case "IntelligentKioskSample.Controls.EmotionMeterControl.EmotionName":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.EmotionMeterControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "EmotionName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_21_EmotionMeterControl_EmotionName;
                xamlMember.Setter = set_21_EmotionMeterControl_EmotionName;
                break;
            case "IntelligentKioskSample.Controls.EmotionMeterControl.EmotionValue":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.EmotionMeterControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "EmotionValue", "Single");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_22_EmotionMeterControl_EmotionValue;
                xamlMember.Setter = set_22_EmotionMeterControl_EmotionValue;
                break;
            case "IntelligentKioskSample.Controls.EmotionMeterControl.MeterForeground":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.EmotionMeterControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "MeterForeground", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_23_EmotionMeterControl_MeterForeground;
                xamlMember.Setter = set_23_EmotionMeterControl_MeterForeground;
                break;
            case "IntelligentKioskSample.Controls.FaceIdentificationBorder.BalloonBackground":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.FaceIdentificationBorder");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "BalloonBackground", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_24_FaceIdentificationBorder_BalloonBackground;
                xamlMember.Setter = set_24_FaceIdentificationBorder_BalloonBackground;
                break;
            case "IntelligentKioskSample.Controls.FaceIdentificationBorder.BalloonForeground":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.FaceIdentificationBorder");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "BalloonForeground", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_25_FaceIdentificationBorder_BalloonForeground;
                xamlMember.Setter = set_25_FaceIdentificationBorder_BalloonForeground;
                break;
            case "IntelligentKioskSample.Controls.FaceIdentificationBorder.CaptionText":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.FaceIdentificationBorder");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "CaptionText", "String");
                xamlMember.Getter = get_26_FaceIdentificationBorder_CaptionText;
                xamlMember.Setter = set_26_FaceIdentificationBorder_CaptionText;
                break;
            case "IntelligentKioskSample.Controls.FaceIdentificationBorder.EmotionData":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.FaceIdentificationBorder");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "EmotionData", "ServiceHelpers.EmotionData[]");
                xamlMember.Getter = get_27_FaceIdentificationBorder_EmotionData;
                xamlMember.Setter = set_27_FaceIdentificationBorder_EmotionData;
                break;
            case "ServiceHelpers.EmotionData.EmotionName":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ServiceHelpers.EmotionData");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "EmotionName", "String");
                xamlMember.Getter = get_28_EmotionData_EmotionName;
                xamlMember.Setter = set_28_EmotionData_EmotionName;
                break;
            case "ServiceHelpers.EmotionData.EmotionScore":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ServiceHelpers.EmotionData");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "EmotionScore", "Single");
                xamlMember.Getter = get_29_EmotionData_EmotionScore;
                xamlMember.Setter = set_29_EmotionData_EmotionScore;
                break;
            case "IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl.BalloonBackground":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "BalloonBackground", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_30_ImageWithFaceBorderUserControl_BalloonBackground;
                xamlMember.Setter = set_30_ImageWithFaceBorderUserControl_BalloonBackground;
                break;
            case "IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl.BalloonForeground":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "BalloonForeground", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_31_ImageWithFaceBorderUserControl_BalloonForeground;
                xamlMember.Setter = set_31_ImageWithFaceBorderUserControl_BalloonForeground;
                break;
            case "IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl.ShowEmotionRecognition":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "ShowEmotionRecognition", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_32_ImageWithFaceBorderUserControl_ShowEmotionRecognition;
                xamlMember.Setter = set_32_ImageWithFaceBorderUserControl_ShowEmotionRecognition;
                break;
            case "IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl.ShowMultipleFaces":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "ShowMultipleFaces", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_33_ImageWithFaceBorderUserControl_ShowMultipleFaces;
                xamlMember.Setter = set_33_ImageWithFaceBorderUserControl_ShowMultipleFaces;
                break;
            case "IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl.DetectFacesOnLoad":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "DetectFacesOnLoad", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_34_ImageWithFaceBorderUserControl_DetectFacesOnLoad;
                xamlMember.Setter = set_34_ImageWithFaceBorderUserControl_DetectFacesOnLoad;
                break;
            case "IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl.DetectFaceAttributes":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "DetectFaceAttributes", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_35_ImageWithFaceBorderUserControl_DetectFaceAttributes;
                xamlMember.Setter = set_35_ImageWithFaceBorderUserControl_DetectFaceAttributes;
                break;
            case "IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl.PerformRecognition":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "PerformRecognition", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_36_ImageWithFaceBorderUserControl_PerformRecognition;
                xamlMember.Setter = set_36_ImageWithFaceBorderUserControl_PerformRecognition;
                break;
            case "IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl.ShowRecognitionResults":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "ShowRecognitionResults", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_37_ImageWithFaceBorderUserControl_ShowRecognitionResults;
                xamlMember.Setter = set_37_ImageWithFaceBorderUserControl_ShowRecognitionResults;
                break;
            case "IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl.ShowDialogOnApiErrors":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.ImageWithFaceBorderUserControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "ShowDialogOnApiErrors", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_38_ImageWithFaceBorderUserControl_ShowDialogOnApiErrors;
                xamlMember.Setter = set_38_ImageWithFaceBorderUserControl_ShowDialogOnApiErrors;
                break;
            case "IntelligentKioskSample.Controls.PageHeader.HeaderContent":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.PageHeader");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "HeaderContent", "Windows.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_39_PageHeader_HeaderContent;
                xamlMember.Setter = set_39_PageHeader_HeaderContent;
                break;
            case "IntelligentKioskSample.Views.BingNewsAnalyticsPage.FilteredNewsResults":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Views.BingNewsAnalyticsPage");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "FilteredNewsResults", "System.Collections.ObjectModel.ObservableCollection`1<IntelligentKioskSample.Views.NewsAndSentimentScore>");
                xamlMember.Getter = get_40_BingNewsAnalyticsPage_FilteredNewsResults;
                xamlMember.Setter = set_40_BingNewsAnalyticsPage_FilteredNewsResults;
                break;
            case "IntelligentKioskSample.Views.NewsAndSentimentScore.Article":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Views.NewsAndSentimentScore");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "Article", "ServiceHelpers.NewsArticle");
                xamlMember.Getter = get_41_NewsAndSentimentScore_Article;
                xamlMember.Setter = set_41_NewsAndSentimentScore_Article;
                break;
            case "IntelligentKioskSample.Views.NewsAndSentimentScore.TitleSentiment":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Views.NewsAndSentimentScore");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "TitleSentiment", "Double");
                xamlMember.Getter = get_42_NewsAndSentimentScore_TitleSentiment;
                xamlMember.Setter = set_42_NewsAndSentimentScore_TitleSentiment;
                break;
            case "IntelligentKioskSample.Views.NewsAndSentimentScore.KeyPhrases":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Views.NewsAndSentimentScore");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "KeyPhrases", "System.Collections.Generic.IEnumerable`1<String>");
                xamlMember.Getter = get_43_NewsAndSentimentScore_KeyPhrases;
                xamlMember.Setter = set_43_NewsAndSentimentScore_KeyPhrases;
                break;
            case "IntelligentKioskSample.Views.BingNewsAnalyticsPage.TopKeyPhrases":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Views.BingNewsAnalyticsPage");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "TopKeyPhrases", "System.Collections.ObjectModel.ObservableCollection`1<IntelligentKioskSample.Views.KeyPhraseCount>");
                xamlMember.Getter = get_44_BingNewsAnalyticsPage_TopKeyPhrases;
                xamlMember.Setter = set_44_BingNewsAnalyticsPage_TopKeyPhrases;
                break;
            case "IntelligentKioskSample.Views.KeyPhraseCount.KeyPhrase":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Views.KeyPhraseCount");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "KeyPhrase", "String");
                xamlMember.Getter = get_45_KeyPhraseCount_KeyPhrase;
                xamlMember.Setter = set_45_KeyPhraseCount_KeyPhrase;
                break;
            case "IntelligentKioskSample.Views.KeyPhraseCount.Count":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Views.KeyPhraseCount");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "Count", "Int32");
                xamlMember.Getter = get_46_KeyPhraseCount_Count;
                xamlMember.Setter = set_46_KeyPhraseCount_Count;
                break;
            case "IntelligentKioskSample.Views.MallKioskPage.EmotionFaces":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Views.MallKioskPage");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "EmotionFaces", "System.Collections.ObjectModel.ObservableCollection`1<IntelligentKioskSample.Views.EmotionExpressionCapture>");
                xamlMember.Getter = get_47_MallKioskPage_EmotionFaces;
                xamlMember.Setter = set_47_MallKioskPage_EmotionFaces;
                break;
            case "IntelligentKioskSample.Views.EmotionExpressionCapture.CroppedFace":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Views.EmotionExpressionCapture");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "CroppedFace", "Windows.UI.Xaml.Media.ImageSource");
                xamlMember.Getter = get_48_EmotionExpressionCapture_CroppedFace;
                xamlMember.Setter = set_48_EmotionExpressionCapture_CroppedFace;
                break;
            case "IntelligentKioskSample.Views.EmotionExpressionCapture.TopEmotion":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Views.EmotionExpressionCapture");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "TopEmotion", "String");
                xamlMember.Getter = get_49_EmotionExpressionCapture_TopEmotion;
                xamlMember.Setter = set_49_EmotionExpressionCapture_TopEmotion;
                break;
            case "IntelligentKioskSample.Controls.ImageSearchUserControl.DetectFacesOnLoad":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.ImageSearchUserControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "DetectFacesOnLoad", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_50_ImageSearchUserControl_DetectFacesOnLoad;
                xamlMember.Setter = set_50_ImageSearchUserControl_DetectFacesOnLoad;
                break;
            case "IntelligentKioskSample.Controls.ImageSearchUserControl.ClearStateWhenClosed":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.ImageSearchUserControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "ClearStateWhenClosed", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_51_ImageSearchUserControl_ClearStateWhenClosed;
                xamlMember.Setter = set_51_ImageSearchUserControl_ClearStateWhenClosed;
                break;
            case "IntelligentKioskSample.Controls.ImageSearchUserControl.DefaultSearchQuery":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.ImageSearchUserControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "DefaultSearchQuery", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_52_ImageSearchUserControl_DefaultSearchQuery;
                xamlMember.Setter = set_52_ImageSearchUserControl_DefaultSearchQuery;
                break;
            case "IntelligentKioskSample.Controls.ImageSearchUserControl.ImageContentType":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Controls.ImageSearchUserControl");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "ImageContentType", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_53_ImageSearchUserControl_ImageContentType;
                xamlMember.Setter = set_53_ImageSearchUserControl_ImageContentType;
                break;
            case "IntelligentKioskSample.Views.PersonDetailsPage.CurrentPerson":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Views.PersonDetailsPage");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "CurrentPerson", "Microsoft.ProjectOxford.Face.Contract.Person");
                xamlMember.Getter = get_54_PersonDetailsPage_CurrentPerson;
                xamlMember.Setter = set_54_PersonDetailsPage_CurrentPerson;
                break;
            case "IntelligentKioskSample.Views.PersonDetailsPage.CurrentPersonGroup":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Views.PersonDetailsPage");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "CurrentPersonGroup", "Microsoft.ProjectOxford.Face.Contract.PersonGroup");
                xamlMember.Getter = get_55_PersonDetailsPage_CurrentPersonGroup;
                xamlMember.Setter = set_55_PersonDetailsPage_CurrentPersonGroup;
                break;
            case "IntelligentKioskSample.Views.PersonDetailsPage.PersonFaces":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Views.PersonDetailsPage");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "PersonFaces", "System.Collections.ObjectModel.ObservableCollection`1<Microsoft.ProjectOxford.Face.Contract.PersonFace>");
                xamlMember.Getter = get_56_PersonDetailsPage_PersonFaces;
                xamlMember.Setter = set_56_PersonDetailsPage_PersonFaces;
                break;
            case "Microsoft.ProjectOxford.Face.Contract.PersonFace.PersistedFaceId":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.ProjectOxford.Face.Contract.PersonFace");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "PersistedFaceId", "Guid");
                xamlMember.Getter = get_57_PersonFace_PersistedFaceId;
                xamlMember.Setter = set_57_PersonFace_PersistedFaceId;
                break;
            case "Microsoft.ProjectOxford.Face.Contract.PersonFace.UserData":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.ProjectOxford.Face.Contract.PersonFace");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "UserData", "String");
                xamlMember.Getter = get_58_PersonFace_UserData;
                xamlMember.Setter = set_58_PersonFace_UserData;
                break;
            case "IntelligentKioskSample.Views.PersonDetailsPage.HeaderText":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Views.PersonDetailsPage");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "HeaderText", "String");
                xamlMember.Getter = get_59_PersonDetailsPage_HeaderText;
                xamlMember.Setter = set_59_PersonDetailsPage_HeaderText;
                break;
            case "IntelligentKioskSample.AppShell.AppFrame":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.AppShell");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "AppFrame", "Windows.UI.Xaml.Controls.Frame");
                xamlMember.Getter = get_60_AppShell_AppFrame;
                xamlMember.SetIsReadOnly();
                break;
            case "IntelligentKioskSample.AppShell.TogglePaneButtonRect":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.AppShell");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "TogglePaneButtonRect", "Windows.Foundation.Rect");
                xamlMember.Getter = get_61_AppShell_TogglePaneButtonRect;
                xamlMember.SetIsReadOnly();
                break;
            case "IntelligentKioskSample.Views.PersonGroupDetailsPage.CurrentPersonGroup":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Views.PersonGroupDetailsPage");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "CurrentPersonGroup", "Microsoft.ProjectOxford.Face.Contract.PersonGroup");
                xamlMember.Getter = get_62_PersonGroupDetailsPage_CurrentPersonGroup;
                xamlMember.Setter = set_62_PersonGroupDetailsPage_CurrentPersonGroup;
                break;
            case "IntelligentKioskSample.Views.PersonGroupDetailsPage.PersonsInCurrentGroup":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("IntelligentKioskSample.Views.PersonGroupDetailsPage");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "PersonsInCurrentGroup", "System.Collections.ObjectModel.ObservableCollection`1<Microsoft.ProjectOxford.Face.Contract.Person>");
                xamlMember.Getter = get_63_PersonGroupDetailsPage_PersonsInCurrentGroup;
                xamlMember.Setter = set_63_PersonGroupDetailsPage_PersonsInCurrentGroup;
                break;
            case "Microsoft.ProjectOxford.Face.Contract.Person.PersonId":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.ProjectOxford.Face.Contract.Person");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "PersonId", "Guid");
                xamlMember.Getter = get_64_Person_PersonId;
                xamlMember.Setter = set_64_Person_PersonId;
                break;
            case "Microsoft.ProjectOxford.Face.Contract.Person.PersistedFaceIds":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.ProjectOxford.Face.Contract.Person");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "PersistedFaceIds", "Guid[]");
                xamlMember.Getter = get_65_Person_PersistedFaceIds;
                xamlMember.Setter = set_65_Person_PersistedFaceIds;
                break;
            case "Microsoft.ProjectOxford.Face.Contract.Person.Name":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.ProjectOxford.Face.Contract.Person");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.Getter = get_66_Person_Name;
                xamlMember.Setter = set_66_Person_Name;
                break;
            case "Microsoft.ProjectOxford.Face.Contract.Person.UserData":
                userType = (global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.ProjectOxford.Face.Contract.Person");
                xamlMember = new global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlMember(this, "UserData", "String");
                xamlMember.Getter = get_67_Person_UserData;
                xamlMember.Setter = set_67_Person_UserData;
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlSystemBaseType
    {
        global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::IntelligentKioskSample.IntelligentKioskSample_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

